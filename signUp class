
import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.content.Intent;

import android.util.Patterns;
import android.view.View;
import android.widget.EditText;
import android.widget.Toast;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseAuthUserCollisionException;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

import androidx.annotation.NonNull;
public class SignUp extends AppCompatActivity implements View.OnClickListener {
    private FirebaseAuth mAuth;
    EditText email_id,user_name, id_password;
    private DatabaseReference RootReference;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_sign_up);

        user_name= findViewById(R.id.user_name);
        email_id= findViewById(R.id.email_id);
        id_password= findViewById(R.id.id_password);
        mAuth = FirebaseAuth.getInstance();
        RootReference= FirebaseDatabase.getInstance().getReference();
        findViewById(R.id.sign_up).setOnClickListener(this);
    }
    private void registerUser(){
        String u_name= user_name.getText().toString().trim();
        String email= email_id.getText().toString().trim();
        String password= id_password.getText().toString().trim();

        if(email.isEmpty()){
            email_id.setError("Email_id is required");
            email_id.requestFocus();
            return;

        }
        else if(u_name.isEmpty()){
            user_name.setError("user name is required");
            user_name.requestFocus();
            return;
        }
        else if(password.isEmpty()){
            id_password.setError("Password is required");
            id_password.requestFocus();
            return;
        }
        if(!Patterns.EMAIL_ADDRESS.matcher(email).matches()){
            email_id.setError("enter valid email id");
            email_id.requestFocus();
            return;
        }
        if(password.length()<8){
            id_password.setError("minimum length of password must be eight");
            id_password.requestFocus();
            return;

        }
        mAuth.createUserWithEmailAndPassword(email, password)
                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {
                        if (task.isSuccessful()) {
                            String currentUserId =mAuth.getCurrentUser().getUid();
                            RootReference.child("App Users").child(currentUserId).setValue(" ");
                            Toast.makeText(getApplicationContext(),"Register Successfully",Toast.LENGTH_SHORT).show();
                            Intent intent =new Intent(SignUp.this,Chats.class);
                            intent.addFlags( Intent.FLAG_ACTIVITY_CLEAR_TOP);
                            startActivity(intent);

                        }
                        else{
                            if(task.getException() instanceof FirebaseAuthUserCollisionException){
                                Toast.makeText(getApplicationContext(),"You are already Register",Toast.LENGTH_SHORT).show();
                            }
                            else{
                                Toast.makeText(getApplicationContext(),"Error in Registration",Toast.LENGTH_SHORT).show();
                            }
                        }
                        // ...
                    }
                });

    }




    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.sign_up:
                registerUser();

        }

    }
}
